{"remainingRequest":"/Users/barakshoushan/Desktop/university/third year/web development/tasks/task3/task 3.3/assignment-3-3-matan-ido/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/barakshoushan/Desktop/university/third year/web development/tasks/task3/task 3.3/assignment-3-3-matan-ido/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/barakshoushan/Desktop/university/third year/web development/tasks/task3/task 3.3/assignment-3-3-matan-ido/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/barakshoushan/Desktop/university/third year/web development/tasks/task3/task 3.3/assignment-3-3-matan-ido/src/pages/RegisterPage.vue?vue&type=template&id=86ab1514&scoped=true&","dependencies":[{"path":"/Users/barakshoushan/Desktop/university/third year/web development/tasks/task3/task 3.3/assignment-3-3-matan-ido/src/pages/RegisterPage.vue","mtime":1594800855712},{"path":"/Users/barakshoushan/Desktop/university/third year/web development/tasks/task3/task 3.3/assignment-3-3-matan-ido/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/barakshoushan/Desktop/university/third year/web development/tasks/task3/task 3.3/assignment-3-3-matan-ido/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/barakshoushan/Desktop/university/third year/web development/tasks/task3/task 3.3/assignment-3-3-matan-ido/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/barakshoushan/Desktop/university/third year/web development/tasks/task3/task 3.3/assignment-3-3-matan-ido/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}