{"remainingRequest":"/Users/matanshushan/Desktop/university/third year/web development/tasks/task3/task 3.2/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matanshushan/Desktop/university/third year/web development/tasks/task3/task 3.2/client/src/App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/matanshushan/Desktop/university/third year/web development/tasks/task3/task 3.2/client/src/App.vue","mtime":1601892286899},{"path":"/Users/matanshushan/Desktop/university/third year/web development/tasks/task3/task 3.2/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matanshushan/Desktop/university/third year/web development/tasks/task3/task 3.2/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/matanshushan/Desktop/university/third year/web development/tasks/task3/task 3.2/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/matanshushan/Desktop/university/third year/web development/tasks/task3/task 3.2/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matanshushan/Desktop/university/third year/web development/tasks/task3/task 3.2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matanshushan/Desktop/university/third year/web development/tasks/task3/task 3.2/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhcHAgewogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICBjb2xvcjogIzJjM2U1MDsKICBtaW4taGVpZ2h0OiAxMDB2aDsKfQoKI25hdiB7CiAgcGFkZGluZzogMzBweDsKfQoKI25hdiBhIHsKICBmb250LXdlaWdodDogYm9sZDsKICBjb2xvcjogIzJjM2U1MDsKfQoKI25hdiBhLnJvdXRlci1saW5rLWV4YWN0LWFjdGl2ZSB7CiAgY29sb3I6ICM0MmI5ODM7Cn0KCi5saW5rIHsKICBjb2xvcjogd2hpdGU7CiAgLy9mb250LXdlaWdodDogYm9sZDsKfQoKLmhhcy1saW5rIHsKICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7CiAgPiBkaXYgewogICAgY3Vyc29yOiBwb2ludGVyOyAvLyBFbmFibGUgY2xpY2sgZXZlbnRzIG9uIGlPUwogICAgcGFkZGluZzogMC41cmVtIDFyZW07CiAgfQp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAobA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div>\n      <b-navbar toggleable=\"lg\" type=\"dark\" variant=\"info\">\n        <!-- <b-navbar-brand>Recipes - Ido Matan</b-navbar-brand> -->\n\n        <b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\n\n        <b-collapse id=\"nav-collapse\" is-nav>\n          <b-navbar-nav>\n            <b-nav-item>\n              <router-link class=\"link\" :to=\"{ name: 'main' }\">\n                Main\n              </router-link>\n            </b-nav-item>\n            <b-nav-item>\n              <router-link class=\"link\" :to=\"{ name: 'search' }\"\n                >Search</router-link\n              >\n            </b-nav-item>\n            <b-nav-item>\n              <router-link class=\"link\" :to=\"{ name: 'about' }\"\n                >About</router-link\n              >\n            </b-nav-item>\n          </b-navbar-nav>\n\n          <!-- Right aligned nav items -->\n          <b-navbar-nav class=\"ml-auto\" v-if=\"$root.store.username\">\n            <b-nav-item-dropdown\n              text=\"Personal\"\n              style=\"font-weight: bold\"\n              right\n            >\n              <b-dropdown-item>\n                <router-link :to=\"{ name: 'favoriteRecipes' }\">\n                  My Favorite Recipes</router-link\n                >\n              </b-dropdown-item>\n              <b-dropdown-item>\n                <router-link :to=\"{ name: 'myRecipes' }\">\n                  My Recipes</router-link\n                >\n              </b-dropdown-item>\n\n              <b-dropdown-item>\n                <router-link :to=\"{ name: 'familyRecipes' }\">\n                  My Family Recipes</router-link\n                >\n              </b-dropdown-item>\n\n              <b-dropdown-item>\n                <router-link :to=\"{ name: 'singleFile' }\">\n                  test file Upload</router-link\n                >\n              </b-dropdown-item>\n\n              <b-dropdown-item v-b-modal.modal-prevent-closing>\n                Create New Recipe\n              </b-dropdown-item>\n\n              <b-modal\n                id=\"modal-prevent-closing\"\n                ref=\"modal\"\n                title=\"Recipe Details:\"\n                @show=\"onReset\"\n                @ok=\"onCreate\"\n              >\n                <form ref=\"form\" @submit.stop.prevent=\"onCreate\">\n                  <b-form-group\n                    id=\"input-group-username\"\n                    label-cols-sm=\"3\"\n                    label=\"Recipe Name:\"\n                    label-for=\"recipeName\"\n                  >\n                    <b-form-input\n                      id=\"recipeName\"\n                      v-model=\"$v.form.recipeName.$model\"\n                      type=\"text\"\n                      :state=\"validateState('recipeName')\"\n                    ></b-form-input>\n                    <b-form-invalid-feedback\n                      v-if=\"!$v.form.recipeName.required\"\n                    >\n                      Recipe Name is required\n                    </b-form-invalid-feedback>\n                  </b-form-group>\n\n                  <b-form-group\n                    id=\"input-group-readyInMinutes\"\n                    label-cols-sm=\"3\"\n                    label=\"Ready In Minutes:\"\n                    label-for=\"readyInMinutes\"\n                  >\n                    <b-form-input\n                      id=\"readyInMinutes\"\n                      v-model=\"$v.form.readyInMinutes.$model\"\n                      type=\"number\"\n                      :state=\"validateState('readyInMinutes')\"\n                    ></b-form-input>\n                    <b-form-invalid-feedback\n                      v-if=\"!$v.form.readyInMinutes.required\"\n                    >\n                      Ready In Minutes is required\n                    </b-form-invalid-feedback>\n                  </b-form-group>\n\n                  <b-form-group\n                    id=\"input-group-servingsAmount\"\n                    label-cols-sm=\"3\"\n                    label=\"Servings amount:\"\n                    label-for=\"servingsAmount\"\n                  >\n                    <b-form-input\n                      id=\"servingsAmount\"\n                      v-model=\"$v.form.servingsAmount.$model\"\n                      type=\"number\"\n                      :state=\"validateState('servingsAmount')\"\n                    ></b-form-input>\n                    <b-form-invalid-feedback\n                      v-if=\"!$v.form.servingsAmount.required\"\n                    >\n                      servings amount is required\n                    </b-form-invalid-feedback>\n                  </b-form-group>\n\n                  <b-form-group>\n                    <b-form-checkbox-group\n                      id=\"checkbox-group-2\"\n                      v-model=\"selected\"\n                      name=\"flavour-2\"\n                    >\n                      <b-form-checkbox value=\"vegan\">Vegan</b-form-checkbox>\n                      <b-form-checkbox value=\"vegeterian\"\n                        >Vegeterian</b-form-checkbox\n                      >\n                      <b-form-checkbox value=\"glutenFree\"\n                        >Gluten Free</b-form-checkbox\n                      >\n                    </b-form-checkbox-group>\n                  </b-form-group>\n\n                  <b-form-group\n                    id=\"input-group-ingredient\"\n                    label=\"Ingredients:\"\n                    label-for=\"ingredient\"\n                  >\n                    <p v-for=\"(i, index) in ingredients\" :key=\"i.id\">\n                      <b-container>\n                        <b-row>\n                          <b-col>\n                            <button\n                              type=\"button\"\n                              @click=\"removeIngredient(index)\"\n                            >\n                              delete\n                            </button>\n                          </b-col>\n\n                          <b-col sm=\"9\">\n                            <b-form-input\n                              v-model=\"ingredients[index]\"\n                              id=\"ingredient\"\n                              type=\"text\"\n                            >\n                            </b-form-input>\n                          </b-col>\n                        </b-row>\n                      </b-container>\n                    </p>\n                    <button type=\"button\" @click=\"addIngredient\">\n                      add ingredient\n                    </button>\n                  </b-form-group>\n\n                  <b-form-group\n                    id=\"input-group-instruction\"\n                    label=\"Instructions:\"\n                    label-for=\"instruction\"\n                  >\n                    <p v-for=\"(i, index) in instructions\" :key=\"i.id\">\n                      <b-container>\n                        <b-row>\n                          <b-col>\n                            <button\n                              type=\"button\"\n                              @click=\"removeInstruction(index)\"\n                            >\n                              delete\n                            </button>\n                          </b-col>\n\n                          <b-col sm=\"9\">\n                            <b-form-input\n                              v-model=\"instructions[index]\"\n                              id=\"instruction\"\n                              type=\"text\"\n                            >\n                            </b-form-input>\n                          </b-col>\n                        </b-row>\n                      </b-container>\n                    </p>\n                    <button type=\"button\" @click=\"addInstruction\">\n                      add instruction\n                    </button>\n                  </b-form-group>\n                  <div class=\"container\">\n                    <div class=\"large-12 medium-12 small-12 cell\">\n                      <label\n                        >File\n                        <input\n                          type=\"file\"\n                          id=\"file\"\n                          ref=\"file\"\n                          v-on:change=\"handleFileUpload()\"\n                        />\n                      </label>\n                      <!-- <button v-on:click=\"submitFile()\">Submit</button> -->\n                    </div>\n                  </div>\n                </form>\n              </b-modal>\n            </b-nav-item-dropdown>\n\n            <b-nav-item-dropdown right>\n              <template v-slot:button-content>\n                <em>\n                  <b> {{ $root.store.username }} </b>\n                </em>\n              </template>\n              <b-dropdown-item href=\"Logout\" @click=\"Logout\"\n                >Sign Out</b-dropdown-item\n              >\n            </b-nav-item-dropdown>\n          </b-navbar-nav>\n          <b-navbar-nav class=\"ml-auto\" v-else>\n            <b-navbar-brand>Hellow Guest!</b-navbar-brand>\n            <b-nav-item>\n              <router-link class=\"link\" :to=\"{ name: 'login' }\"\n                >Login</router-link\n              >\n            </b-nav-item>\n            <b-nav-item>\n              <router-link class=\"link\" :to=\"{ name: 'register' }\"\n                >Register</router-link\n              >\n            </b-nav-item>\n          </b-navbar-nav>\n        </b-collapse>\n      </b-navbar>\n    </div>\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {\n  checkIfContainsNumber,\n  checkIfContainsSpecialChar\n} from \"./validators/password\";\n\nimport {\n  required,\n  minLength,\n  maxLength,\n  alpha,\n  sameAs,\n  email,\n  url\n} from \"vuelidate/lib/validators\";\nexport default {\n  data() {\n    return {\n      form: {\n        recipeName: \"\",\n        readyInMinutes: 0,\n        servingsAmount: 0\n      },\n      //ingredients: [{ ingredient: \"dsfds\" }]\n      imagePath: \"\",\n      instructions: [\"\"],\n      ingredients: [\"\"],\n      selected: [],\n      errors: [],\n      validated: false,\n      name: \"App\",\n      results: null,\n      file: \"\"\n    };\n  },\n  validations: {\n    form: {\n      recipeName: {\n        required\n      },\n      readyInMinutes: {\n        required\n      },\n      servingsAmount: {\n        required\n      }\n      // fileImage: {\n      //   required,\n      // },\n    }\n  },\n  methods: {\n    submitFile() {\n      let formData = new FormData();\n      formData.append(\"file\", this.file);\n      this.axios\n        .post(\"http://localhost:3001/users/uploadImage\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        })\n        .then(function() {\n          console.log(\"SUCCESS!!\");\n        })\n        .catch(function() {\n          console.log(\"FAILURE!!\");\n        });\n    },\n\n    handleFileUpload() {\n      this.file = this.$refs.file.files[0];\n    },\n    addIngredient() {\n      this.ingredients.push(\"\");\n    },\n    removeIngredient(index) {\n      this.ingredients.splice(index, 1);\n    },\n    addInstruction() {\n      this.instructions.push(\"\");\n    },\n    removeInstruction(index) {\n      this.instructions.splice(index, 1);\n    },\n    validateState(param) {\n      const { $dirty, $error } = this.$v.form[param];\n      return $dirty ? !$error : null;\n    },\n\n    onCreate(bvModalEvt) {\n      bvModalEvt.preventDefault();\n      this.form.submitError = undefined; //maybe\n      this.$v.form.$touch();\n      if (this.$v.form.$anyError) {\n        return;\n      }\n      this.$nextTick(() => {\n        this.$bvModal.hide(\"modal-prevent-closing\");\n      });\n\n      this.submitFile();\n      this.createRecipe();\n    },\n    async createRecipe() {\n      try {\n        let analyzedInstructions = {};\n        analyzedInstructions.steps = [];\n        for (let i = 0; i < this.instructions.length; i++) {\n          analyzedInstructions.steps.push({\n            number: i + 1,\n            step: this.instructions[i]\n          });\n        }\n\n        console.log(\"title: \" + this.form.recipeName);\n        console.log(\"readyInMinutes: \" + this.form.readyInMinutes);\n        console.log(\"vegan: \" + this.selected.includes(\"vegan\"));\n        console.log(\"vegetarian: \" + this.selected.includes(\"vegetarian\"));\n        console.log(\"glutenFree: \" + this.selected.includes(\"glutenFree\"));\n        console.log(\"ingredients: \" + this.ingredients);\n        console.log(\"analyzedInstructions: \" + analyzedInstructions);\n        console.log(\"servingsAmounts: \" + this.form.servingsAmount);\n        //console.log(this.form.file.name);\n        // let formData = new FormData();\n        // formData.append(\"file\", this.file);\n        const response = await this.axios.post(\n          \"http://localhost:3001/users/createRecipe\",\n          {\n            // image: formData,\n            title: this.form.recipeName,\n            readyInMinutes: this.form.readyInMinutes,\n            aggregateLikes: 0,\n            vegan: this.selected.includes(\"vegan\"),\n            vegetarian: this.selected.includes(\"vegeterian\"),\n            glutenFree: this.selected.includes(\"glutenFree\"),\n            ingredients: this.ingredients,\n            instructions: \"\",\n            analyzedInstructions: analyzedInstructions,\n            servings: this.form.servingsAmount\n          }\n          // {\n          //   headers: {\n          //     \"Content-Type\": \"multipart/form-data\"\n          //   }\n          // }\n        );\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    onReset() {\n      this.form = {\n        recipeName: \"\",\n        readyInMinutes: 0,\n        instructions: \"\",\n        servingsAmount: 0\n      };\n      this.selected = [];\n      this.file = \"\";\n      this.ingredients = [\"\"];\n      this.instructions = [\"\"];\n\n      this.$nextTick(() => {\n        this.$v.$reset();\n      });\n    },\n    Logout() {\n      this.$root.store.logout();\n      this.$root.toast(\"Logout\", \"User logged out successfully\", \"success\");\n\n      this.$router.push(\"/\").catch(() => {\n        this.$forceUpdate();\n      });\n    }\n  }\n};\n</script>\n  \n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  min-height: 100vh;\n}\n\n#nav {\n  padding: 30px;\n}\n\n#nav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n#nav a.router-link-exact-active {\n  color: #42b983;\n}\n\n.link {\n  color: white;\n  //font-weight: bold;\n}\n\n.has-link {\n  padding: 0 !important;\n  > div {\n    cursor: pointer; // Enable click events on iOS\n    padding: 0.5rem 1rem;\n  }\n}\n</style>\n"]}]}